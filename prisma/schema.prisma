// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Center {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id          String        @id @default(cuid())
  email       String        @unique
  password    String
  username    String?       @unique
  firstName   String?
  lastName    String?
  phoneNumber String?
  centerId    String
  center      Center        @relation(fields: [centerId], references: [id], onDelete: Cascade)
  role        UserRole
  classes     ClassMember[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

enum UserRole {
  ADMIN
  TEACHER
  STUDENT
}

model Classroom {
  id           String        @id @default(cuid())
  name         String
  description  String?
  classMembers ClassMember[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model ClassMember {
  classId   String
  class     Classroom @relation(fields: [classId], references: [id], onDelete: Cascade)
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@id([classId, userId])
}
